%{
#include "zeynepturkmen-hw3.h"
#include "zeynepturkmen-hw3.tab.h"

int nested = 0;
int line = 1;

int incrementer(char *input){  
  while(strstr(input, "\n")!=NULL){
  line++;
  input = strstr(input, "\n") + 1;	
  }
}
%}

tNEWLINE \n

tLOCALPART [A-Za-z0-9\-_]+(([A-Za-z0-9\-_]*|\.?)[A-Za-z0-9\-_])*
tDOMAIN [A-Za-z0-9]+[A-Za-z0-9\-]*[A-Za-z0-9]+|[A-Za-z0-9]{1}

/* Comments */
tSLC  "//" 
tOMLC "/\*" 
tCMLC "*/"   


%x singleLineComment multiLineComment
%%
{tSLC}  BEGIN(singleLineComment);
<singleLineComment>{tNEWLINE}    {line++; BEGIN(INITIAL);}
<singleLineComment>.    ;


{tOMLC} {BEGIN(multiLineComment); ++nested;}
<multiLineComment>{tCMLC}      { if (--nested == 0) BEGIN(INITIAL); }
<multiLineComment>{tOMLC}     ++nested;
<multiLineComment>{tNEWLINE}    {line++;} ;
<multiLineComment>.         ;

"Mail" return tMAIL;
"end"[ \t\n\r\f]+"Mail" {incrementer(yytext); return tENDMAIL;}
    
"schedule" {return tSCHEDULE;}
"end"[ \t\n\r\f]+"schedule" {incrementer(yytext); return tENDSCHEDULE;}

"send" {return  tSEND;}
"set" return tSET;
"to" return tTO;
"from" return tFROM;
@ return tAT;
, return tCOMMA;
: return tCOLON;
\( return tLPR;
\) return tRPR;
\[ return tLBR;
\] return tRBR;
[a-zA-Z\_]+[a-zA-Z0-9\_]* { yylval.lineStr.str = strdup(yytext);
                            yylval.lineStr.line = line;
                            return tIDENT;}
["][^\"]*["] {  incrementer(yytext); 
                char* noQuotes = strdup(yytext + 1);
                noQuotes[strlen(noQuotes) - 1] = '\0';
                yylval.strVal = noQuotes;
                return tSTRING;
              }

[0-9]{2}"/"[0-9]{2}"/"[0-9]{4}|[0-9]{2}\.[0-9]{2}\.[0-9]{4}|[0-9]{2}-[0-9]{2}-[0-9]{4} {  yylval.lineStr.str = strdup(yytext);
                                                                                          yylval.lineStr.line = line;
                                                                                          return tDATE;}

[0-9]{2}:[0-9]{2} {
                   yylval.lineStr.str = strdup(yytext);
                    yylval.lineStr.line = line;
                    return tTIME;}

{tLOCALPART}"@"({tDOMAIN}"."{tDOMAIN}"."{tDOMAIN}|{tDOMAIN}"."{tDOMAIN}) {
  yylval.strVal = strdup(yytext);
  return tADDRESS;}

[ \t]+
{tNEWLINE}    {line++;}
.	    return yytext[0];
%%
